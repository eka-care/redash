name: dev-cd
on:
  push:
    branches:
      -main
env: 
  test: test
  
jobs:
  docker-build: 
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo VERSION=$(echo $GITHUB_REF | cut -d / -f 3) >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.DEV_AWS_Region }}
          
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build docker images
        env:
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
        run: |
          output=$(aws ecr list-images --region ap-south-1 --repository-name $ECR_REPOSITORY  | grep latest | tr -d '" ,' | cut -d ':' -f 2)
          echo $output
          if [[ "$output" == "latest" ]]
          then
             docker pull $ECR_REPO_URL/$ECR_REPOSITORY:latest
             docker build --cache-from $ECR_REPO_URL/$ECR_REPOSITORY:latest -t $ECR_REPO_URL/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile-abdm .
          else
             docker build -t $ECR_REPO_URL/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile-abdm .
          fi          
          
      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
        run: |
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Release info
        run: |
          echo ${{ github.action.release }}
          
